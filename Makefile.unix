TARGET=vktest
VKSDK=../Vulkan-LoaderAndValidationLayers
VKSDK_INC=-I$(VKSDK)/include/
VKSDK_LIB=-L$(VKSDK)/rbuild/loader/
CXX=g++
CXXFLAGS=-c -std=c++11 -Wall -Werror \
	-DVKTEST_DEBUG $(VKSDK_INC)
GLSL=../Vulkan-LoaderAndValidationLayers/external/glslang/build/StandAlone/glslangValidator
GLSLFLAGS=-V
LD=g++
LDFLAGS=-lvulkan -lSDL2 -lX11-xcb $(VKSDK_LIB)
RM=rm -rf
OBJS=	debug.o \
	global.o \
	main.o \
	renderer.o \
	timer.o

# Shader compilation code
SHADERS=\
	./shaders/test.vert.spv \
	./shaders/test.frag.spv

all: $(TARGET) $(SHADERS)

test:
	LD_LIBRARY_PATH=$(VKSDK)/dbuild/loader \
	VK_LAYER_PATH=$(VKSDK)/dbuild/layers \
	./vktest -d1

$(TARGET): $(OBJS)
	$(LD) $(OBJS) -o $(TARGET) $(LDFLAGS)

debug.o: debug.cpp renderer.h
	$(CXX) $(CXXFLAGS) debug.cpp -o debug.o

global.o: global.cpp global.h
	$(CXX) $(CXXFLAGS) global.cpp -o global.o

main.o: main.cpp
	$(CXX) $(CXXFLAGS) main.cpp -o main.o

renderer.o: renderer.cpp renderer.h
	$(CXX) $(CXXFLAGS) renderer.cpp -o renderer.o

timer.o: timer.cpp timer.h
	$(CXX) $(CXXFLAGS) timer.cpp -o timer.o

./shaders/test.vert.spv: ./shaders/src/test.vert
	$(GLSL) $(GLSLFLAGS) ./shaders/src/test.vert -o ./shaders/test.vert.spv

./shaders/test.frag.spv: ./shaders/src/test.frag
	$(GLSL) $(GLSLFLAGS) ./shaders/src/test.frag -o ./shaders/test.frag.spv

clean:
	$(RM) $(OBJS) log.txt

distclean:
	$(RM) $(OBJS) $(TARGET) $(SHADERS) log.txt
